"""Initial database setup

Revision ID: 5a6e70624711
Revises: 
Create Date: 2025-01-29 01:07:39.547306

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5a6e70624711'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_machine')
    op.drop_table('users')
    op.drop_table('results')
    op.drop_table('machines')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('machines',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('machines_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('machine_code', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='machines_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('results',
    sa.Column('result_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('total_strips', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('faulty_strips', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('non_faulty_strips', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='results_machine_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('result_id', name='results_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('lastname', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('totp_secret', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reset_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reset_token_expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_machine',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('machine_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['machine_id'], ['machines.id'], name='user_machine_machine_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_machine_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_machine_pkey')
    )
    # ### end Alembic commands ###
